--------------------------------------------------------------------------------
-- Copyright (c) 1995-2003 Xilinx, Inc.
-- All Right Reserved.
--------------------------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 8.1i
--  \   \         Application : ISE
--  /   /         Filename : tb.ant
-- /___/   /\     Timestamp : Tue Dec 29 10:52:07 2009
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: 
--Design Name: tb
--Device: Xilinx
--

library ieee;
use ieee.std_logic_1164.all;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
USE STD.TEXTIO.ALL;

ENTITY tb IS
END tb;

ARCHITECTURE testbench_arch OF tb IS
    FILE RESULTS: TEXT OPEN WRITE_MODE IS "H:\6S\add_lab\comparator\tb.ano";

    COMPONENT Comparator
        PORT (
            A : In std_logic_vector (1 DownTo 0);
            B : In std_logic_vector (1 DownTo 0);
            less : Out std_logic;
            equal : Out std_logic;
            greater : Out std_logic
        );
    END COMPONENT;

    SIGNAL A : std_logic_vector (1 DownTo 0) := "00";
    SIGNAL B : std_logic_vector (1 DownTo 0) := "00";
    SIGNAL less : std_logic := '0';
    SIGNAL equal : std_logic := '0';
    SIGNAL greater : std_logic := '0';

    SHARED VARIABLE TX_ERROR : INTEGER := 0;
    SHARED VARIABLE TX_OUT : LINE;

    BEGIN
        UUT : Comparator
        PORT MAP (
            A => A,
            B => B,
            less => less,
            equal => equal,
            greater => greater
        );

        PROCESS    -- Annotation process
            VARIABLE TX_TIME : INTEGER := 0;

            PROCEDURE ANNOTATE_less(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", less, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, less);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_equal(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", equal, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, equal);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_greater(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", greater, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, greater);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
        BEGIN
            WAIT for 1 fs;
            ANNOTATE_less(0);
            ANNOTATE_equal(0);
            ANNOTATE_greater(0);
            ANNO_LOOP : LOOP
                WAIT for 50 ns;
                TX_TIME := TX_TIME + 50;
                ANNOTATE_less(TX_TIME);
                ANNOTATE_equal(TX_TIME);
                ANNOTATE_greater(TX_TIME);
                WAIT for 50 ns;
                TX_TIME := TX_TIME + 50;
            END LOOP ANNO_LOOP;
        END PROCESS;

        PROCESS
            BEGIN
                -- -------------  Current Time:  100ns
                WAIT FOR 100 ns;
                A <= "11";
                B <= "11";
                -- -------------------------------------
                -- -------------  Current Time:  500ns
                WAIT FOR 400 ns;
                B <= "10";
                -- -------------------------------------
                -- -------------  Current Time:  900ns
                WAIT FOR 400 ns;
                B <= "01";
                -- -------------------------------------
                -- -------------  Current Time:  1400ns
                WAIT FOR 500 ns;
                A <= "01";
                -- -------------------------------------
                -- -------------  Current Time:  1700ns
                WAIT FOR 300 ns;
                A <= "00";
                -- -------------------------------------
                WAIT FOR 300 ns;

                STD.TEXTIO.write(TX_OUT, string'("Total[]"));
                STD.TEXTIO.writeline(RESULTS, TX_OUT);
                ASSERT (FALSE) REPORT
                    "Success! Simulation for annotation completed"
                    SEVERITY FAILURE;
            END PROCESS;

    END testbench_arch;

