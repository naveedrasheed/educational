////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2003 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 8.1i
//  \   \         Application : ISE
//  /   /         Filename : tbbb.tfw
// /___/   /\     Timestamp : Thu May 07 12:12:16 2009
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: tbbb
//Device: Xilinx
//
`timescale 1ns/1ps

module tbbb;
    reg read = 1'b0;
    reg write = 1'b0;
    reg [31:0] pc = 32'b00000000000000000000000000000000;
    reg [31:0] data_in = 32'b00000000000000000000000000000000;
    wire [31:0] data_out;
    reg clk = 1'b0;

    parameter PERIOD = 200;
    parameter real DUTY_CYCLE = 0.5;
    parameter OFFSET = 0;

    initial    // Clock process for clk
    begin
        #OFFSET;
        forever
        begin
            clk = 1'b0;
            #(PERIOD-(PERIOD*DUTY_CYCLE)) clk = 1'b1;
            #(PERIOD*DUTY_CYCLE);
        end
    end

    memory UUT (
        .read(read),
        .write(write),
        .pc(pc),
        .data_in(data_in),
        .data_out(data_out),
        .clk(clk));

        integer TX_ERROR = 0;
        
        initial begin  // Open the results file...
            #100200 // Final time:  100200 ns
            if (TX_ERROR == 0) begin
                $display("No errors or warnings.");
                end else begin
                    $display("%d errors found in simulation.", TX_ERROR);
                    end
                    $stop;
                end

                initial begin
                    // -------------  Current Time:  85ns
                    #85;
                    write = 1'b1;
                    pc = 32'b00000000000000000000000000000001;
                    data_in = 32'b00000000000000000000000000000010;
                    // -------------------------------------
                    // -------------  Current Time:  685ns
                    #600;
                    write = 1'b0;
                    // -------------------------------------
                    // -------------  Current Time:  885ns
                    #200;
                    read = 1'b1;
                    // -------------------------------------
                    // -------------  Current Time:  1285ns
                    #400;
                    read = 1'b0;
                    // -------------------------------------
                end

                task CHECK_data_out;
                    input [31:0] NEXT_data_out;

                    #0 begin
                        if (NEXT_data_out !== data_out) begin
                            $display("Error at time=%dns data_out=%b, expected=%b", $time, data_out, NEXT_data_out);
                            TX_ERROR = TX_ERROR + 1;
                        end
                    end
                endtask

            endmodule

